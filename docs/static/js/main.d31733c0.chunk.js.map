{"version":3,"sources":["types/type.js","helpers/loadBillboard.js","helpers/upsertBillboard.js","actions/billboard.js","components/billboard/ProgramItem.js","components/billboard/ProgramModal.js","utils/utils.js","components/billboard/BillboardScreen.js","actions/auth.js","components/ui/Navbar.js","routers/BillboardRoutes.js","components/login/LoginScreen.js","hooks/useForm.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/billboardReducer.js","store/store.js","BillboardApp.js","index.js"],"names":["types","loadBillboard","a","fetch","response","json","data","radioPaCuba","find","item","monday","billboard","tuesday","wednesday","thursday","friday","saturday","sunday","addEditBillboard","xtoken","token","payload","headers","method","body","JSON","stringify","startAddNewProgram","day","dispatch","type","id","name","image","start","finish","handleEditProgram","activeProgram","setEnableDisableProgram","active","getState","auth","forEach","element","i","_id","result","status","ProgramItem","useDispatch","className","onClick","startEditProgram","splice","deleteProgram","src","alt","ProgramModal","props","useSelector","state","Modal","aria-labelledby","centered","Body","Form","Label","Control","size","value","onChange","e","newActiveProgram","target","placeholder","Button","variant","push","orderArray","array","sort","b","parseInt","split","BillboardScreen","history","loading","ui","useEffect","replace","map","show","login","email","password","message","Navbar","handleClick","to","activeClassName","exact","BillboardRoutes","path","component","LoginScreen","initialState","useState","values","setValues","useForm","formValues","handleInputChange","preventDefault","onSubmit","autoComplete","disabled","role","aria-hidden","msgError","AppRouter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","BillboardApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d31733c0.chunk.js","sourcesContent":["export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiSetLoading: '[UI] Set Loading',\n\n    billboardSetBillboard: '[BILLBOARD] Set Billboard',\n    billboardSetActiveProgram: '[BILLBOARD] Set Active Program',\n\n\n}","export const loadBillboard = async () => {\n    \n    const url = 'https://radio-pa-cuba.herokuapp.com/api/radio';\n    const response = await fetch(url);\n    const { data } = await response.json(); \n\n    let monday = []; \n    let tuesday = [];\n    let wednesday = []; \n    let thursday = [];\n    let friday = [];\n    let saturday = [];\n    let sunday = [];\n\n    const radioPaCuba = data.find(item => item['code'] === 'RPC');\n    monday = radioPaCuba.billboard.find(item => item['day'] === 1);\n    tuesday = radioPaCuba.billboard.find(item => item['day'] === 2);\n    wednesday = radioPaCuba.billboard.find(item => item['day'] === 3);\n    thursday = radioPaCuba.billboard.find(item => item['day'] === 4);\n    friday = radioPaCuba.billboard.find(item => item['day'] === 5);\n    saturday = radioPaCuba.billboard.find(item => item['day'] === 6);\n    sunday = radioPaCuba.billboard.find(item => item['day'] === 7);\n\n    return {\n        monday: monday['programs'],\n        tuesday: tuesday['programs'],\n        wednesday: wednesday['programs'], \n        thursday: thursday['programs'],\n        friday: friday['programs'],\n        saturday: saturday['programs'],\n        sunday: sunday['programs'],\n    };\n}","export const addEditBillboard = async (monday, tuesday, wednesday, thursday, friday, saturday, sunday, xtoken) => {\n    const token = xtoken; \n    const url = 'https://radio-pa-cuba.herokuapp.com/api/radio';\n    const payload = {\n        \"code\": \"RPC\",\n        \"billboard\": [\n            {\n                \"day\": 1,\n                \"programs\": monday\n            },\n            {\n                \"day\": 2,\n                \"programs\": tuesday\n            },\n            {\n                \"day\": 3,\n                \"programs\": wednesday\n            },\n            {\n                \"day\": 4,\n                \"programs\": thursday\n            },\n            {\n                \"day\": 5,\n                \"programs\": friday\n            },\n            {\n                \"day\": 6,\n                \"programs\": saturday\n            },\n            {\n                \"day\": 7,\n                \"programs\": sunday\n            }\n        ]\n    };\n\n    const response = await fetch(url, {\n        headers: {\n            'Content-Type': 'application/json',\n            'x-token': token\n        },\n        method: 'POST',\n        body: JSON.stringify(payload)\n    });\n    return await response.json();\n}","import { types } from \"../types/type\";\nimport { loadBillboard, } from '../helpers/loadBillboard';\nimport { addEditBillboard, } from '../helpers/upsertBillboard';\n\nexport const startDeleteActiveProgram = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: types.billboardSetActiveProgram,\n            payload: null\n        });\n    }\n}\n\nexport const startAddNewProgram = (day) => {\n    return async (dispatch) => {\n\n        const activeProgram = {\n            id: null,\n            name: \"\",\n            image: \"\",\n            start: \"\",\n            finish: \"\",\n            day: day\n        }\n\n        dispatch({\n            type: types.billboardSetActiveProgram,\n            payload: activeProgram\n        });\n    }\n}\n\nexport const startEditProgram = (id, name, image, start, finish, day) => {\n    return async (dispatch) => {\n        const activeProgram = {\n            id,\n            name,\n            image,\n            start,\n            finish,\n            day,\n        }\n\n        dispatch({\n            type: types.billboardSetActiveProgram,\n            payload: activeProgram\n        });\n    }\n}\n\nexport const handleEditProgram = (activeProgram) => {\n    return async (dispatch) => {\n\n        dispatch({\n            type: types.billboardSetActiveProgram,\n            payload: activeProgram\n        });\n    }\n}\n\nexport const getBillboard = () => {\n    return async (dispatch) => {\n\n        dispatch({\n            type: types.uiSetLoading,\n            payload: true\n        });\n        const result = await loadBillboard();\n        dispatch({\n            type: types.billboardSetBillboard,\n            payload: result\n        });\n        dispatch({\n            type: types.uiSetLoading,\n            payload: false\n        });\n\n    }\n}\n\nexport const upsertBillboard = () => {\n    return async (dispatch, getState) => {\n        const { billboard } = getState();\n        const xtoken = getState().auth.token;\n        const { activeProgram } = getState().billboard;\n        if (activeProgram.id == null) {\n            billboard[activeProgram.day].push(activeProgram);\n        } else {\n            billboard[activeProgram.day].forEach(element => {\n                if (element._id === activeProgram.id) {\n                    const { name, image, start, finish } = activeProgram;\n                    element.name = name;\n                    element.image = image;\n                    element.start = start;\n                    element.finish = finish;\n                }\n            });\n        }\n\n        dispatch({\n            type: types.uiSetLoading,\n            payload: true\n        });\n        const result = await addEditBillboard(billboard.monday, billboard.tuesday, billboard.wednesday,\n            billboard.thursday, billboard.friday, billboard.saturday, billboard.sunday, xtoken);\n        const { status } = result;\n        if (status !== \"SUCCESS\") {\n            dispatch({\n                type: types.uiSetError,\n                payload: 'Error al actualizar la lista de programas por favor intente más tarde.'\n            });\n        } else {\n            dispatch({\n                type: types.billboardSetBillboard,\n                payload: {\n                    monday: billboard.monday,\n                    tuesday: billboard.tuesday,\n                    wednesday: billboard.wednesday,\n                    thursday: billboard.thursday,\n                    friday: billboard.friday,\n                    saturday: billboard.saturday,\n                    sunday: billboard.sunday,\n                    activeProgram: null\n                }\n            });\n        }\n        dispatch({\n            type: types.uiSetLoading,\n            payload: false\n        });\n    }\n}\n\nexport const deleteProgram = (id, day) => {\n    return async (dispatch, getState) => {\n        const { billboard } = getState();\n        const xtoken = getState().auth.token;\n   \n        billboard[day].forEach((element, i) => {\n            if (element._id === id) {\n                billboard[day].splice(i, 1); \n                return;\n            }      \n        });\n\n        dispatch({\n            type: types.uiSetLoading,\n            payload: true\n        });\n        const result = await addEditBillboard(billboard.monday, billboard.tuesday, billboard.wednesday,\n            billboard.thursday, billboard.friday, billboard.saturday, billboard.sunday, xtoken);\n        const { status } = result;\n        if (status !== \"SUCCESS\") {\n            dispatch({\n                type: types.uiSetError,\n                payload: 'Error al actualizar la lista de programas por favor intente más tarde.'\n            });\n        } else {\n            dispatch({\n                type: types.billboardSetBillboard,\n                payload: {\n                    monday: billboard.monday,\n                    tuesday: billboard.tuesday,\n                    wednesday: billboard.wednesday,\n                    thursday: billboard.thursday,\n                    friday: billboard.friday,\n                    saturday: billboard.saturday,\n                    sunday: billboard.sunday,\n                    activeProgram: null\n                }\n            });\n        }\n        dispatch({\n            type: types.uiSetLoading,\n            payload: false\n        });\n    }\n}\n\nexport const setEnableDisableProgram = (id, day, active) => {\n    return async (dispatch, getState) => {\n        const { billboard } = getState();\n        const xtoken = getState().auth.token;\n  \n        billboard[day].forEach((element, i) => {\n            if (element._id === id) {\n                element.active = active\n                return;\n            }      \n        });\n\n        dispatch({\n            type: types.uiSetLoading,\n            payload: true\n        });\n        const result = await addEditBillboard(billboard.monday, billboard.tuesday, billboard.wednesday,\n            billboard.thursday, billboard.friday, billboard.saturday, billboard.sunday, xtoken);\n        const { status } = result;\n        if (status !== \"SUCCESS\") {\n            dispatch({\n                type: types.uiSetError,\n                payload: 'Error al actualizar la lista de programas por favor intente más tarde.'\n            });\n        } else {\n            dispatch({\n                type: types.billboardSetBillboard,\n                payload: {\n                    monday: billboard.monday,\n                    tuesday: billboard.tuesday,\n                    wednesday: billboard.wednesday,\n                    thursday: billboard.thursday,\n                    friday: billboard.friday,\n                    saturday: billboard.saturday,\n                    sunday: billboard.sunday,\n                    activeProgram: null\n                }\n            });\n        }\n        dispatch({\n            type: types.uiSetLoading,\n            payload: false\n        });\n    }\n}\n\n","import { useDispatch } from 'react-redux';\nimport { startEditProgram, deleteProgram, setEnableDisableProgram } from \"../../actions/billboard\";\n\nexport const ProgramItem = ({ name, start, finish, image, active = true, id, day }) => {\n\n    const dispatch = useDispatch();\n\n    const handleStartEditProgram = () => {\n        dispatch(startEditProgram(id, name, image, start, finish, day));\n    }\n\n    const handleDeleteProgram = () => {\n        dispatch(deleteProgram(id, day));\n    }\n\n    const handleEnableProgram = () => {\n        dispatch(setEnableDisableProgram(id, day, true));\n    }\n    const handleDisableProgram = () => {\n        dispatch(setEnableDisableProgram(id, day, false));\n    }\n\n    return (\n        <>\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <div className=\"card-body custom-padding\">\n                        <div className=\"media d-flex\">\n                            <div className=\"media-body text-right\">\n                                <span>{name}</span>\n                                <br />\n                                <span>{`${start} - ${finish}`}</span>\n                            </div>\n                        </div>\n                        <div className=\"d-flex justify-content-between\">\n                            <div>\n                                <br />\n                                <i className=\"fas fa-edit icon-blue\" onClick={handleStartEditProgram}></i>\n                                {\n                                    active ? (\n                                        <i className=\"fas fa-ban icon-red\" onClick={handleDisableProgram}></i>\n                                    ) :\n                                        (\n                                            <i className=\"fas fa-check icon-green\" onClick={handleEnableProgram}></i>\n                                        )\n                                }\n                                <i className=\"fas fa-trash icon-red\" onClick={handleDeleteProgram}></i>\n                            </div>\n                            <img className=\"program-img \" src={image} alt={name} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import { Modal, Form, Button } from 'react-bootstrap';\nimport { startDeleteActiveProgram, handleEditProgram, upsertBillboard } from \"../../actions/billboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport const ProgramModal = (props) => {\n    const dispatch = useDispatch();\n    const { activeProgram } = useSelector(state => state.billboard);\n    const { name, image, start, finish }  = activeProgram || '';\n    const handleDeleteActiveProgram = () => {\n        dispatch(startDeleteActiveProgram());\n    }\n    const handleSaveBillboard = () => {\n        dispatch(upsertBillboard())\n    }\n    const handleNameValue = (e) => {\n        const newActiveProgram = { ...activeProgram, name: e.target.value };       \n        dispatch(handleEditProgram(newActiveProgram));\n    }\n    const handleImageValue = (e) => {\n        const newActiveProgram = { ...activeProgram, image: e.target.value };       \n        dispatch(handleEditProgram(newActiveProgram));\n    }\n    const handleStartValue = (e) => {\n        const newActiveProgram = { ...activeProgram, start: e.target.value };       \n        dispatch(handleEditProgram(newActiveProgram));\n    }\n    const handleFinishValue = (e) => {\n        const newActiveProgram = { ...activeProgram, finish: e.target.value };       \n        dispatch(handleEditProgram(newActiveProgram));\n    }\n    return (\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\"\n            centered>\n            <Modal.Body className=\"show-grid\">\n                <Form>\n                    {activeProgram?.id == null ? <h3>\n                        Adicionar programa\n                    </h3> : <h3>Editar Programa</h3>}\n                    <br />\n                    <Form.Label><strong>Ingrese el nombre del programa.</strong></Form.Label>\n                    <Form.Control size=\"sm\" type=\"text\"\n                    value={name} onChange={handleNameValue}\n                     placeholder=\"Nombre\" name=\"name\"/>\n                    <br />\n                    <Form.Label><strong>Ingrese la url de la imagen.</strong></Form.Label>\n                    <Form.Control size=\"sm\" type=\"text\"\n                    value={image} onChange={handleImageValue}\n                     placeholder=\"Imagen\" name=\"image\"/>\n                    <br />\n                    <Form.Label><strong>Ingrese la hora de inicio del programa ej. 8:00</strong></Form.Label>\n                    <Form.Control size=\"sm\" type=\"text\"\n                    value={start} onChange={handleStartValue}\n                     placeholder=\"Hora inicio\" name=\"start\"/>\n                    <br />\n                    <Form.Label><strong>Ingrese la hora de fin del programa ej. 14:00</strong></Form.Label>\n                    <Form.Control size=\"sm\" type=\"text\"\n                    value={finish} onChange={handleFinishValue}\n                     placeholder=\"Hora fin\" name=\"finish\"/>\n                    <br />\n                </Form>\n                <div className=\"d-flex justify-content-around\">\n                    <Button variant=\"success\" type=\"submit\" onClick={handleSaveBillboard}>\n                        Guardar\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleDeleteActiveProgram}>Cancelar</Button>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n}","export const orderArray = (array) => {\n    const result =  array.sort((a, b) => {\n        if(parseInt(a.start.split(':')[0])  > parseInt(b.start.split(':')[0])){\n            return 1;\n        }\n        if(parseInt(a.start.split(':')[0])  < parseInt(b.start.split(':')[0])){\n            return -1;\n        }\n        return 0;\n    });\n\n    return result;\n}","import { useEffect } from 'react';\nimport { ProgramItem } from './ProgramItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startAddNewProgram } from \"../../actions/billboard\";\nimport { ProgramModal } from \"../billboard/ProgramModal\";\nimport { orderArray } from \"../../utils/utils\";\n\nexport const BillboardScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n    const state  = useSelector(state => state);\n    const { activeProgram } = useSelector(state => state.billboard);\n    const { loading } = useSelector(state => state.ui);\n    const { monday, tuesday, wednesday, thursday, friday, saturday, sunday } = useSelector(state => state.billboard)||[];\n\n    const handleAddNewProgramMonday = () => {\n        dispatch(startAddNewProgram('monday'));\n    }\n    const handleAddNewProgramTuesday = () => {\n        dispatch(startAddNewProgram('tuesday'));\n    }\n    const handleAddNewProgramWednesday = () => {\n        dispatch(startAddNewProgram('wednesday'));\n    }\n    const handleAddNewProgramThursday = () => {\n        dispatch(startAddNewProgram('thursday'));\n    }\n    const handleAddNewProgramFriday = () => {\n        dispatch(startAddNewProgram('friday'));\n    }\n    const handleAddNewProgramSaturday = () => {\n        dispatch(startAddNewProgram('saturday'));\n    }\n    const handleAddNewProgramSunday = () => {\n        dispatch(startAddNewProgram('sunday'));\n    }\n\n    useEffect(() => {\n        if (state.auth.token === null) {\n            history.replace('/login');\n        }\n    }, [state.auth.token != null])\n\n    return (\n        <div>\n            {loading ? <p className=\"loading-margin\">Cargando cartelera...</p> : <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"card alert-primary\">\n                                <div className=\"card-content\">\n                                    <div className=\"card-body\">\n                                        <div className=\"media d-flex justify-content-between\">\n                                            <div className=\"media-body text-right\">\n                                                <span className=\"font-bold\">Lunes</span>\n                                            </div>\n                                            <i\n                                                onClick={handleAddNewProgramMonday}\n                                                className=\"fas fa-plus-square icon-green\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                orderArray(monday).map((item) =>\n                                    <div className=\"program-container\" key={`cont-${item._id}`}>\n                                        <ProgramItem\n                                            key={item._id}\n                                            id={item._id}\n                                            name={item.name}\n                                            start={item.start}\n                                            finish={item.finish}\n                                            image={item.image}\n                                            active={item.active}\n                                            day='monday' />\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"card alert-primary\">\n                                <div className=\"card-content\">\n                                    <div className=\"card-body\">\n                                        <div className=\"media d-flex justify-content-between\">\n                                            <div className=\"media-body text-right\">\n                                                <span className=\"font-bold\">Martes</span>\n                                            </div>\n                                            <i \n                                            onClick={handleAddNewProgramTuesday}\n                                            className=\"fas fa-plus-square icon-green\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                orderArray(tuesday).map((item) =>\n                                    <div className=\"program-container\" key={`cont-${item._id}`}>\n                                        <ProgramItem\n                                            key={item._id}\n                                            id={item._id}\n                                            name={item.name}\n                                            start={item.start}\n                                            finish={item.finish}\n                                            image={item.image}\n                                            active={item.active}\n                                            day='tuesday' />\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"card alert-primary\">\n                                <div className=\"card-content\">\n                                    <div className=\"card-body\">\n                                        <div className=\"media d-flex justify-content-between\">\n                                            <div className=\"media-body text-right\">\n                                                <span className=\"font-bold\">Miércoles</span>\n                                            </div>\n                                            <i \n                                            onClick={handleAddNewProgramWednesday}\n                                            className=\"fas fa-plus-square icon-green\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                orderArray(wednesday).map((item) =>\n                                    <div className=\"program-container\" key={`cont-${item._id}`}>\n                                        <ProgramItem\n                                            key={item._id}\n                                            id={item._id}\n                                            name={item.name}\n                                            start={item.start}\n                                            finish={item.finish}\n                                            image={item.image}\n                                            active={item.active}\n                                            day='wednesday' />\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"card alert-primary\">\n                                <div className=\"card-content\">\n                                    <div className=\"card-body\">\n                                        <div className=\"media d-flex justify-content-between\">\n                                            <div className=\"media-body text-right\">\n                                                <span className=\"font-bold\">Jueves</span>\n                                            </div>\n                                            <i \n                                            onClick={handleAddNewProgramThursday}\n                                            className=\"fas fa-plus-square icon-green\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                orderArray(thursday).map((item) =>\n                                    <div className=\"program-container\" key={`cont-${item._id}`}>\n                                        <ProgramItem\n                                            key={item._id}\n                                            id={item._id}\n                                            name={item.name}\n                                            start={item.start}\n                                            finish={item.finish}\n                                            image={item.image}\n                                            active={item.active}\n                                            day='thursday' />\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"card alert-primary\">\n                                <div className=\"card-content\">\n                                    <div className=\"card-body\">\n                                        <div className=\"media d-flex justify-content-between\">\n                                            <div className=\"media-body text-right\">\n                                                <span className=\"font-bold\">Viernes</span>\n                                            </div>\n                                            <i \n                                            onClick={handleAddNewProgramFriday}\n                                            className=\"fas fa-plus-square icon-green\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                orderArray(friday).map((item) =>\n                                    <div className=\"program-container\" key={`cont-${item._id}`}>\n                                        <ProgramItem\n                                            key={item._id}\n                                            id={item._id}\n                                            name={item.name}\n                                            start={item.start}\n                                            finish={item.finish}\n                                            image={item.image}\n                                            active={item.active}\n                                            day='friday' />\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"card alert-primary\">\n                                <div className=\"card-content\">\n                                    <div className=\"card-body\">\n                                        <div className=\"media d-flex justify-content-between\">\n                                            <div className=\"media-body text-right\">\n                                                <span className=\"font-bold\">Sábado</span>\n                                            </div>\n                                            <i \n                                            onClick={handleAddNewProgramSaturday}\n                                            className=\"fas fa-plus-square icon-green\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                orderArray(saturday).map((item) =>\n                                    <div className=\"program-container\" key={`cont-${item._id}`}>\n                                        <ProgramItem\n                                            key={item._id}\n                                            id={item._id}\n                                            name={item.name}\n                                            start={item.start}\n                                            finish={item.finish}\n                                            image={item.image}\n                                            active={item.active}\n                                            day='saturday'/>\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"card alert-primary\">\n                                <div className=\"card-content\">\n                                    <div className=\"card-body\">\n                                        <div className=\"media d-flex justify-content-between\">\n                                            <div className=\"media-body text-right\">\n                                                <span className=\"font-bold\">Domingo</span>\n                                            </div>\n                                            <i \n                                            onClick={handleAddNewProgramSunday}\n                                            className=\"fas fa-plus-square icon-green\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                orderArray(sunday).map((item) =>\n                                    <div className=\"program-container\" key={`cont-${item._id}`}>\n                                        <ProgramItem\n                                            key={item._id}\n                                            id={item._id}\n                                            name={item.name}\n                                            start={item.start}\n                                            finish={item.finish}\n                                            image={item.image}\n                                            active={item.active}\n                                            day='sunday' />\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                    <ProgramModal\n                        show={activeProgram != null}\n                    />\n                </div>\n            </div>}\n        </div>\n    )\n}\n","import { types } from \"../types/type\";\n\nexport const login = (email, password) => {\n\n    return async (dispatch) => {\n        \n        dispatch({\n            type: types.uiSetLoading,\n            payload: true\n        });\n\n        const url = 'https://radio-pa-cuba.herokuapp.com/api/auth';\n        const response = await fetch(url, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({ email, password })\n        });\n        const { data, status, message } = await response.json();\n        \n        if(status === \"SUCCESS\"){\n            dispatch({\n                type: types.login,\n                payload: data.token\n            });\n            dispatch({\n                type: types.uiSetError,\n                payload: null\n            });\n        }else{\n            dispatch({\n                type: types.uiSetError,\n                payload: 'Invalid user y/o password.'\n            });\n            dispatch({\n                type: types.logout,\n                payload: null\n            });\n        }\n        dispatch({\n            type: types.uiSetLoading,\n            payload: false\n        });\n        \n    }\n}\n\nexport const logout = () =>{\n\n    return (dispatch)=>{\n        dispatch({\n            type: types.logout,\n            payload: null\n        });\n        dispatch({\n            type: types.uiSetError,\n            payload: null\n        });\n    }\n    \n}\n\n","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\";\nimport { logout } from '../../actions/auth';\n\nexport const Navbar = () => {\n    const dispatch = useDispatch();\n    const handleClick = async () => {   \n        dispatch(logout());        \n    }\n    \n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark custom-nav\">\n                \n                <Link \n                    className=\"navbar-brand\" \n                    to=\"/\"\n                >\n                    Radio Pa Cuba\n                </Link>\n\n                <div className=\"navbar-collapse\">\n                    <div className=\"navbar-nav\">\n\n                    </div>\n                </div>\n\n                <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/login\"\n                        onClick={handleClick}\n                    >\n                        Logout\n                    </NavLink>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { BillboardScreen } from '../components/billboard/BillboardScreen';\nimport { Navbar } from '../components/ui/Navbar';\n\nexport const BillboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n            <div className=\"container position-normal\">\n                <Switch>\n                    <Route exact path=\"/billboard\" component={BillboardScreen} />\n                    <Redirect to=\"/billboard\" />\n                </Switch>\n            </div>\n        </>\n    )\n}\n","import { useEffect } from 'react';\nimport { login } from '../../actions/auth';\nimport { getBillboard } from \"../../actions/billboard\";\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const LoginScreen = ({ history }) => {\n\n    const dispatch = useDispatch();\n    const state = useSelector(state => state);\n    const { loading } = useSelector(state => state.ui);\n    useEffect(() => {\n        if (state.auth.token != null) {\n            dispatch(getBillboard());\n            history.replace('/');\n        }\n    }, [state.auth.token])\n\n    const [formValues, handleInputChange] = useForm({\n        email: \"\",\n        password: \"\"\n    });\n\n    const { email, password } = formValues;\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleClick}>\n                <div className=\"row\">\n                    <div className=\"d-flex justify-content-center \">\n                        <div className=\"form-login\">\n                            <h4>Radio Pa Cuba Admin</h4>\n                            <input\n                                type=\"text\"\n                                name=\"email\"\n                                className=\"form-control input-sm chat-input\"\n                                placeholder=\"Email\"\n                                autoComplete=\"off\"\n                                value={email}\n                                onChange={handleInputChange}\n                            />\n                            <br />\n                            <input type=\"text\"\n                                name=\"password\"\n                                className=\"form-control input-sm chat-input\"\n                                placeholder=\"Password\"\n                                autoComplete=\"off\"\n                                value={password}\n                                onChange={handleInputChange}\n                            />\n                            <br />\n                            <div className=\"wrapper\">\n                                {!loading ? <button type=\"submit\"\n                                    className=\"btn btn-primary btn-md\"\n                                    onClick={handleClick}>\n                                    Entrar\n                            </button> :\n                            <button className=\"btn btn-primary\" type=\"button\" disabled>\n                                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                    Verificando...\n                            </button>}\n                            </div>\n                            <br />\n                            {state.ui.msgError && <div className=\"alert alert-danger\" role=\"alert\">\n                                Usuario y/o contraseña incorrectos.\n                        </div>}\n                        </div>\n                    </div>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import {useEffect} from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { BillboardRoutes } from '../routers/BillboardRoutes';\nimport { LoginScreen } from '../components/login/LoginScreen';\n\nexport const AppRouter = () => {\n\n    useEffect(() => {\n        \n    }, [])\n\n\n    return (\n        <Router>\n        <div>\n            <Switch>\n            <Route exact path=\"/login\" component={LoginScreen}/>\n            <Route path=\"/\" component={BillboardRoutes}/>\n            </Switch>\n        </div>\n    </Router>\n    )\n}\n","import { types } from \"../types/type\";\n\nconst initialState = {\n    token: null,\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                ...state,\n                token: action.payload\n            }\n        case types.logout:\n            return {\n                ...state,\n                token: null\n            }\n        default:\n            return state;\n    }\n}","import { types } from \"../types/type\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiSetLoading:\n            return {\n                ...state,\n                loading: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/type\";\n\nconst initialState = {\n    monday: [],\n    tuesday: [],\n    wednesday: [],\n    thursday: [],\n    friday: [],\n    saturday: [],\n    sunday: [],\n    activeProgram: null\n}\n\nexport const billboardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.billboardSetBillboard:\n            const { monday, tuesday, wednesday, thursday, friday, saturday, sunday, activeProgram } = action.payload;\n            return {\n                ...state,\n                monday,\n                tuesday,\n                wednesday,\n                thursday,\n                friday,\n                saturday,\n                sunday,\n                activeProgram\n            }\n        case types.billboardSetActiveProgram:\n            return {\n                ...state,\n                activeProgram: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { billboardReducer } from \"../reducers/billboardReducer\";\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    billboard: billboardReducer,\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react'\nimport {AppRouter} from './routers/AppRouter';\nimport { Provider } from \"react-redux\";\nimport { store } from './store/store';\n\nexport const BillboardApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BillboardApp} from './BillboardApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <BillboardApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}